---
swagger: "2.0"
info:
  description: "This is a sample service for managing assets."
  version: "0.1.0-SNAPSHOT"
  title: "Asset Service"
  contact:
    name: "Aaron Donovan"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/"
tags:
- name: "asset"
paths:
  /asset:
    post:
      tags:
      - "asset"
      summary: "Create a new asset"
      description: ""
      operationId: "createAsset"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "asset to create"
        required: false
        schema:
          $ref: "#/definitions/Asset"
      responses:
        201:
          description: "asset created"
        400:
          description: "asset is invalid"
        500:
          description: "unexpected error"
        409:
          description: "asset exists with that uri"
  /asset/{uri}:
    get:
      tags:
      - "asset"
      summary: "Retrieve an asset"
      description: ""
      operationId: "getAsset"
      produces:
      - "application/json"
      parameters:
      - name: "uri"
        in: "path"
        description: "uri of asset to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/Asset"
        500:
          description: "unexpected error"
        304:
          description: "asset not modified"
        404:
          description: "asset not found"
    delete:
      tags:
      - "asset"
      summary: "Delete an asset"
      description: ""
      operationId: "deleteAsset"
      parameters:
      - name: "uri"
        in: "path"
        description: "uri of asset to delete"
        required: true
        type: "string"
      responses:
        500:
          description: "unexpected error"
        204:
          description: "asset deleted"
        404:
          description: "asset not found"
definitions:
  Asset:
    properties:
      uri:
        type: "string"
      name:
        type: "string"
      notes:
        type: "array"
        items:
          type: "string"